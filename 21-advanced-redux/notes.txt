Reducers functions mus be PURE,SIDE EFFECT FREE AND SYNCHRONOUS functions.

So reducer functions should take some input (e.g old state/action) and should produce some output (e.g state). For the same input it should produce same output without any side effects or async code that blocks it.

So where should side effects & async tasks be executed??? (Reducers are the wrong place)

Possible options :

1. Inside the COMPONENTS (e.g via useEffect())

2. Inside action creator functions - redux has solution to provide side effects and to use them without changing reducer functions.


THUNK - What it is?

It is a function that delays an action until later. It returns another function that does NOT return the action itself but instead another function which eventually returns the actions.

It is a common pattern to have action creators that can perform side effects and then can dispatch other actions which eventually reach the reducers as part of a flow-of-steps that should be taken.